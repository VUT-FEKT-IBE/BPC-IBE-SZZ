name: Build all subject PDFs

# Feel free to increment this counter in your attempts to do things
# the smart way instead of the easy way.
#
# total_hours_wasted = 7

on:
  push:
    branches:
      - main
    paths:
      - "**/*.tex"
  workflow_dispatch:
    branches:
      - main
    paths:
      - "**/*.tex"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clone the repository
      - name: Set up Git repository
        uses: actions/checkout@v2

      # Make the builds
      # If there is a better way to do this, instead of doing it one-by-one, let me know
      - name: Build BPC-AKR
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-AKR
          root_file: main.tex

      - name: Build BPC-DAK
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-DAK
          root_file: main.tex

      - name: Build BPC-HWS
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-HWS
          root_file: main.tex

      - name: Build BPC-IC2
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-IC2
          root_file: main.tex

      - name: Build BPC-KKR
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-KKR
          root_file: main.tex

      # BPC-KOM was created in Word, not LaTeX. It is well-formatted,
      # so we're ignoring build for this subject.
      # - name: Build BPC-KOM
      #   uses: xu-cheng/latex-action@v2
      #   with:
      #     latexmk_shell_escape: true
      #     working_directory: BPC-KOM
      #     root_file: main.tex

      - name: Build BPC-MDS
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-MDS
          root_file: main.tex

      - name: Build BPC-PNA
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-PNA
          root_file: main.tex

      - name: Build BPC-SOS
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-SOS
          root_file: main.tex

      - name: Build BPC-SPR
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-SPR
          root_file: main.tex

      - name: Build BPC-TIN
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-TIN
          root_file: main.tex

      - name: Build BPC-UP2A
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-UP2A
          root_file: main.tex

      # BPC-ZSY was created in Word, not LaTeX. It is well-formatted,
      # so we're ignoring build for this subject.
      # - name: Build BPC-ZSY
      #   uses: xu-cheng/latex-action@v2
      #   with:
      #     latexmk_shell_escape: true
      #     working_directory: BPC-ZSY
      #     root_file: main.tex

      # Prepare tag name
      - name: Create tag
        id: create_tag
        run: |
          tag=build-$(date +%Y%m%d-%H%M%S)
          echo "::set-output name=tag::$tag"

      # Create release draft, so we can add the files
      - name: Create draft release
        id: create_draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false

      # Upload the assets
      # Again, if there is better way, please, let me know.
      - name: Add BPC-AKR to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-AKR/main.pdf
          asset_name: BPC-AKR.pdf
          asset_content_type: application/pdf

      - name: Add BPC-DAK to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-DAK/main.pdf
          asset_name: BPC-DAK.pdf
          asset_content_type: application/pdf

      - name: Add BPC-HWS to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-HWS/main.pdf
          asset_name: BPC-HWS.pdf
          asset_content_type: application/pdf

      - name: Add BPC-IC2 to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-IC2/main.pdf
          asset_name: BPC-IC2.pdf
          asset_content_type: application/pdf

      - name: Add BPC-KKR to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-KKR/main.pdf
          asset_name: BPC-KKR.pdf
          asset_content_type: application/pdf

      - name: Add BPC-KOM to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          # We do have prepared PDF, use it instead of LaTeX build.
          asset_path: ./BPC-KOM/word-export.pdf
          asset_name: BPC-KOM.pdf
          asset_content_type: application/pdf

      - name: Add BPC-MDS to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-MDS/main.pdf
          asset_name: BPC-MDS.pdf
          asset_content_type: application/pdf

      - name: Add BPC-PNA to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-PNA/main.pdf
          asset_name: BPC-PNA.pdf
          asset_content_type: application/pdf

      - name: Add BPC-SOS to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-SOS/main.pdf
          asset_name: BPC-SOS.pdf
          asset_content_type: application/pdf

      - name: Add BPC-SPR to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-SPR/main.pdf
          asset_name: BPC-SPR.pdf
          asset_content_type: application/pdf

      - name: Add BPC-TIN to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-TIN/main.pdf
          asset_name: BPC-TIN.pdf
          asset_content_type: application/pdf

      - name: Add BPC-UP2A to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-UP2A/main.pdf
          asset_name: BPC-UP2A.pdf
          asset_content_type: application/pdf

      - name: Add BPC-ZSY to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          # We do have prepared PDF, use it instead of LaTeX build.
          asset_path: ./BPC-ZSY/word-export.pdf
          asset_name: BPC-ZSY.pdf
          asset_content_type: application/pdf

      # Publish the release
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_draft_release.outputs.id }}
